"""Add Google OAuth authentication tables

Revision ID: 82e7eda0a875
Revises: 10eb8d5b88fb
Create Date: 2025-08-24 10:54:51.422535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82e7eda0a875'
down_revision: Union[str, Sequence[str], None] = '10eb8d5b88fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('google_users',
    sa.Column('google_id', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('picture', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('google_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_google_links',
    sa.Column('line_user_id', sa.String(length=40), nullable=False),
    sa.Column('google_id', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['google_id'], ['google_users.google_id'], ),
    sa.ForeignKeyConstraint(['line_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('line_user_id', 'google_id')
    )
    op.drop_constraint(op.f('diary_vector_diary_id_fkey'), 'diary_vector', type_='foreignkey')
    op.create_foreign_key(None, 'diary_vector', 'diary', ['diary_id'], ['diary_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'diary_vector', type_='foreignkey')
    op.create_foreign_key(op.f('diary_vector_diary_id_fkey'), 'diary_vector', 'diary', ['diary_id'], ['diary_id'], ondelete='CASCADE')
    op.drop_table('user_google_links')
    op.drop_table('google_users')
    # ### end Alembic commands ###
